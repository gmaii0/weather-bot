import httpx
from aiogram import Router, F
from aiogram.types import Message
from aiogram.enums import ContentType
from core.settings import settings

loc_router = Router()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –ø–æ —à–∏—Ä–æ—Ç–µ –∏ –¥–æ–ª–≥–æ—Ç–µ
async def get_location(latitude: float, longitude: float):
    api_url = f"{settings.api_url.weather_url}lat={latitude}&lon={longitude}&appid={settings.api_url.openweather_api_token}&units=metric"
    try:
        async with httpx.AsyncClient() as client:
            response = await client.get(api_url)
            if response.status_code == 200:
                data = response.json()
                return data
            else:
                print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {response.status_code}")
                return None
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        return None

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ª–æ–∫–∞—Ü–∏–µ–π
@loc_router.message(F.content_type == ContentType.LOCATION)
async def process_location(message: Message):
    latitude = message.location.latitude
    longitude = message.location.longitude
    weather_data = await get_location(latitude, longitude)

    if weather_data:
        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –∏–∑ –æ—Ç–≤–µ—Ç–∞ API
        city_name = weather_data.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        weather_description = weather_data["weather"][0]["main"]
        temperature = weather_data["main"]["temp"]
        feels_like = weather_data["main"]["feels_like"]
        humidity = weather_data["main"]["humidity"]
        wind_speed = weather_data["wind"]["speed"]
        pressure = weather_data["main"]["pressure"]
        visibility = weather_data.get("visibility", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        clouds_percentage = weather_data["clouds"]["all"]

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ–≥–æ–¥–µ
        await message.answer(
            f"**üåÜ –ü–æ–≥–æ–¥–∞ –≤ {city_name}:**\n"
            f"* –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature:.1f}¬∞C\n"
            f"*(–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like:.1f}¬∞C)\n"
            f"* –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
            f"* –î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –≥–ü–∞\n"
            f"* –í–∏–¥–∏–º–æ—Å—Ç—å: {visibility} –º\n"
            f"**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:**\n"
            f"* –û–±–ª–∞—á–Ω–æ—Å—Ç—å: {clouds_percentage}%\n"
        )
    else:
        await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.")
